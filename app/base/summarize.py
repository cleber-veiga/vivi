from app.core.factory import LLMFactory
from app.services.memory import MemoryService
from app.src.summarize import summarize_conversation_temp
from langchain_core.prompts import PromptTemplate
from langchain_core.output_parsers import StrOutputParser

PROMPT = """
VocÃª Ã© um assistente de conversas pelo WhatsApp especializado em reengajar leads que nÃ£o responderam hÃ¡ algum tempo.
Sua missÃ£o Ã© retomar o contato de forma leve, simpÃ¡tica e profissional.

Abaixo estÃ¡ um resumo da conversa atÃ© agora:
{summary}

Com base nesse contexto, crie UMA Ãºnica mensagem curta e personalizada que:
- Reforce de forma sutil o tema ou objetivo da Ãºltima interaÃ§Ã£o.
- Incentive o lead a responder, despertando curiosidade ou interesse.
- Mantenha tom amigÃ¡vel, prÃ³ximo e humano â€” evitando formalidade excessiva ou frases genÃ©ricas de robÃ´.
- NÃ£o repita exatamente as frases jÃ¡ usadas anteriormente.
- Tenha no mÃ¡ximo 2 frases, sendo direta e envolvente.

Responda apenas com o texto final da mensagem, sem explicaÃ§Ãµes ou formataÃ§Ãµes adicionais.
"""

async def generate_response_with_summary(session, phone) -> str:
    llm = LLMFactory().get_llm()

    # Busca memÃ³ria; trata ausÃªncia
    lead = await MemoryService.get_memory_by_phone(session, phone)
    memory = getattr(lead, "conversation_mem", None) if lead else None

    # Gera resumo com fallback
    try:
        summary = await summarize_conversation_temp(memory or "", llm)
    except Exception:
        summary = ""

    # Se nÃ£o houver contexto, manda um toque neutro
    if not summary or not summary.strip():
        return "Posso te ajudar a retomar de onde paramos? Se preferir, me diga um bom horÃ¡rio e eu sigo daqui. ðŸ™‚"

    prompt = PromptTemplate.from_template(PROMPT)
    chain = prompt | llm | StrOutputParser()

    try:
        text = await chain.ainvoke({"summary": summary})
    except Exception:
        # Fallback em caso de erro do LLM
        text = "Quer continuar de onde paramos? Me diga um horÃ¡rio que seja bom pra vocÃª. ðŸ™‚"

    # NormalizaÃ§Ã£o final
    return (text or "").strip()
